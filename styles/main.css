@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
 */
[fill] {
  fill: currentColor;
}

[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Mulish";
  src: url("../fonts/Mulish-Light.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Mulish";
  src: url("../fonts/Mulish-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Mulish";
  src: url("../fonts/Mulish-SemiBold.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Mulish";
  src: url("../fonts/Mulish-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-primary: #7d7987;
  --color-white: #ffffff;
  --color-black: #000000;
  --color-blue: #458ff6;
  --color-blue-alternate: #4089ed;
  --color-dark-blue: #233348;
  --color-dark-purple: #1f1534;
  --color-gradient-blue: linear-gradient(212deg, #67c3f3 0%, #5a98f2 100%);
  --container-width: 1120px;
  --container-padding-x: 20px;
  --font-family-base: "Mulish", sans-serif;
  --border-radius-20: 20px;
  --border-radius-55: 55px;
  --shadow: 10px 40px 50px 0 rgba(229, 233, 246, 0.4);
  --button-height: 56px;
  --button-border: 1.4px solid #458ff6;
  --transition-duration: 0.2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 1023.98px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 1023.98px) {
  .visible-mobile {
    display: none !important;
  }
}

html.is-lock {
  overflow: hidden;
}

body {
  font-size: clamp(14px, 1.3125vw, 21px);
  font-family: var(--font-family-base);
  display: flex;
  flex-direction: column;
  color: var(--color-primary);
  line-height: 1.52;
  font-weight: 300;
}

main {
  flex-grow: 1;
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: var(--color-dark-purple);
  font-weight: 400;
}
@media (hover: hover) {
  a:hover {
    font-weight: 700;
  }
}
@media (hover: none) {
  a:active {
    font-weight: 700;
  }
}
a[class] {
  text-decoration: none;
}

h1,
.h1,
h2,
.h2,
h3,
.h3 {
  font-weight: 700;
  color: var(--color-black);
}

h1,
.h1 {
  font-size: clamp(24px, 3vw, 48px);
  line-height: 1.17;
}

h2,
.h2 {
  font-size: clamp(18px, 2.25vw, 36px);
}

h3,
.h2 {
  font-size: clamp(16px, 1.5vw, 24px);
  line-height: 2.33;
}

.header {
  padding-top: 56px;
}
@media (width <= 1023.98px) {
  .header {
    padding-top: 36px;
  }
}
.header__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.header__logo {
  display: flex;
  align-items: center;
  font-size: 24px;
  font-weight: 700;
  column-gap: 12px;
  color: var(--color-dark-blue);
  z-index: 2;
}
.header__logo-icon {
  width: 41px;
  height: 41px;
}
.header__overlay {
  transition-duration: var(--transition-duration);
}
@media (width <= 1023.98px) {
  .header__overlay {
    position: fixed;
    inset: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    z-index: 1;
    background-color: var(--color-white);
  }
}
@media (width <= 1023.98px) {
  .header__overlay:not(.is-visible) {
    opacity: 0;
    visibility: hidden;
    translate: 100%;
  }
}
@media (width <= 1023.98px) {
  .header__menu {
    overflow-y: auto;
  }
}
.header__menu-list {
  display: flex;
  column-gap: 40px;
}
@media (width <= 1023.98px) {
  .header__menu-list {
    flex-direction: column;
    align-items: center;
    row-gap: 20px;
  }
}
.header__menu-link {
  font-size: clamp(16px, 1.125vw, 18px);
  opacity: 0.5;
  display: inline-flex;
  align-items: center;
  height: 51px;
}
@media (width <= 1023.98px) {
  .header__menu-link {
    font-size: 36px;
  }
}
@media (hover: hover) {
  .header__menu-link:hover {
    opacity: 1;
  }
}
@media (hover: none) {
  .header__menu-link:active {
    opacity: 1;
  }
}

.burger-button {
  width: 40px;
  height: 40px;
  display: inline-flex;
  flex-direction: column;
  justify-content: space-evenly;
  border: none;
  background: none;
  z-index: 2;
}
.burger-button.is-active .burger-button__line:first-child {
  rotate: 45deg;
  translate: 0px 10px;
}
.burger-button.is-active .burger-button__line:nth-child(2) {
  rotate: -45deg;
}
.burger-button.is-active .burger-button__line:last-child {
  width: 0;
}
.burger-button__line {
  height: 3px;
  width: 100%;
  background-color: var(--color-dark-blue);
  border-radius: 10px;
  transition-duration: var(--transition-duration);
}

/*# sourceMappingURL=main.css.map */
